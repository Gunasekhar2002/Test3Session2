 gcc -g p4final.c; ./a.out
enter the degree of the polynomial:2
enter the value of x:1
enter the coefficients of x^2:
1
enter the coefficients of x^1:
1
enter the coefficients of x^0:
1
the value of the polynomial at 1.000000 is 3.000000
 
 gdb a.out
GNU gdb (Ubuntu 8.1.1-0ubuntu1) 8.1.1
Copyright (C) 2018 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from a.out...done.
(gdb) b main
Breakpoint 1 at 0x943: file p4final.c, line 48.
(gdb) r
Starting program: /home/runner/Test3Session2-1/a.out 
warning: Error disabling address space randomization: Operation not permitted

Breakpoint 1, main () at p4final.c:48
48  {
(gdb) n
51    n=input_degree();
(gdb) s
input_degree () at p4final.c:4
4   {
(gdb) n
6     printf("enter the degree of the polynomial:");
(gdb) n
8     scanf("%d",&n);
(gdb) n
enter the degree of the polynomial:2
9     return n;
(gdb) p n
$1 = 2
(gdb) n
10  }
(gdb) n
main () at p4final.c:52
52    float a[n];
(gdb) n
53    x=input_x();
(gdb) s
input_x () at p4final.c:12
12  {
(gdb) n
14    printf("enter the value of x:");
(gdb) n
15    scanf("%f",&x);
(gdb) n
enter the value of x:1
16    return x;
(gdb) p x
$2 = 1
(gdb) n
17  }
(gdb) n
main () at p4final.c:54
54    input_coefficients(n,a);
(gdb) s
input_coefficients (n=2, a=0x7ffdef4e21b0) at p4final.c:20
20    for(int i=n;i>=0;i--)
(gdb) n
22        printf("enter the coefficients of x^%d:\n",i);
(gdb) n
enter the coefficients of x^2:
23        scanf("%f",&a[i]);
(gdb) n
            1
20    for(int i=n;i>=0;i--)
(gdb) n
22        printf("enter the coefficients of x^%d:\n",i);
(gdb) n
enter the coefficients of x^1:
23        scanf("%f",&a[i]);
(gdb) n
            1
20    for(int i=n;i>=0;i--)
(gdb) n
22        printf("enter the coefficients of x^%d:\n",i);
(gdb) n
enter the coefficients of x^0:
23        scanf("%f",&a[i]);
(gdb) n
        1
20    for(int i=n;i>=0;i--)
(gdb) n
25  }
(gdb) n
main () at p4final.c:55
55    result=evaluate_polynomial(n,a,x);
(gdb) s
evaluate_polynomial (n=2, a=0x7ffdef4e21b0, x=1) at p4final.c:28
28    float result=0;
(gdb) n
29    for(int i=n;i>0;i--)
(gdb) n
31        result=(result+a[i])*x;
(gdb) n
29    for(int i=n;i>0;i--)
(gdb) n
31        result=(result+a[i])*x;
(gdb) n
29    for(int i=n;i>0;i--)
(gdb) n
33    result=result+a[0];
(gdb) n
35  }
(gdb) n
main () at p4final.c:56
56    out_put(n,a,x,result);
(gdb) s
out_put (n=2, a=0x7ffdef4e21b0, x=1, result=3) at p4final.c:38
38     result=0;
(gdb) n
39    for(int i=n;i>0;i--)
(gdb) n
41        result=(result+a[i])*x;
(gdb) n
39    for(int i=n;i>0;i--)
(gdb) n
41        result=(result+a[i])*x;
(gdb) n
39    for(int i=n;i>0;i--)
(gdb) n
44     result=result+a[0];
(gdb) n
45    printf("the value of the polynomial at %f is %f\n",x,result);
(gdb) n
the value of the polynomial at 1.000000 is 3.000000
46  }
(gdb) n
main () at p4final.c:57
57    return 0;
(gdb) c
Continuing.
[Inferior 1 (process 5957) exited normally]
(gdb) 
