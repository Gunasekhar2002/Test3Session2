 gcc -g p1final.c; ./a.out
enter num1:1
enter den1:2
enter num2:1
enter den2:4
sum of fraction is:
1/2+1/4=6/8 
 gdb a.out
GNU gdb (Ubuntu 8.1.1-0ubuntu1) 8.1.1
Copyright (C) 2018 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from a.out...done.
(gdb) b main
Breakpoint 1 at 0x8d3: file p1final.c, line 25.
(gdb) run
Starting program: /home/runner/Test3Session2/a.out 
warning: Error disabling address space randomization: Operation not permitted

Breakpoint 1, main () at p1final.c:25
25  {
(gdb) n
27    input(&n1,&d1,&n2,&d2);
(gdb) s
input (num1=0x7ffc703aa740, den1=0x7ffc703aa74c, num2=0x7ffc703aa744, 
    den2=0x7ffc703aa750) at p1final.c:4
4     printf("enter num1:");
(gdb) n
5     scanf("%d",num1);
(gdb) n
enter num1: 1
6      printf("enter den1:");
(gdb) n
7     scanf("%d",den1);
(gdb) n
enter den1: 2
8      printf("enter num2:");
(gdb) n
9     scanf("%d",num2);
(gdb) n
enter num2:4
10     printf("enter den2:");
 gcc -g p3final.c; ./a.out
enter the value of n:5
enter the value of r:2
value of ncr is 10.000000 
 gdb a.out
GNU gdb (Ubuntu 8.1.1-0ubuntu1) 8.1.1
Copyright (C) 2018 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from a.out...done.
(gdb) b main
Breakpoint 1 at 0x844: file p3final.c, line 26.
(gdb) r
Starting program: /home/runner/Test3Session2/a.out 
warning: Error disabling address space randomization: Operation not permitted

Breakpoint 1, main () at p3final.c:26
26  int main(){
(gdb) n
29    input(&n,&r);
(gdb) s
input (n=0x7ffe3420067c, r=0x7ffe34200680) at p3final.c:4
4     printf("enter the value of n:");
(gdb) n
5     scanf("%d",n);
(gdb) n
enter the value of n: 5
6     printf("enter the value of r:");
(gdb) n
7     scanf("%d",r);
(gdb) n
enter the value of r: 2
8   }
(gdb) p n
$1 = (int *) 0x7ffe3420067c
(gdb) p r
$2 = (int *) 0x7ffe34200680
(gdb) n
main () at p3final.c:30
30    result=ncr(n,r);
(gdb) s
ncr (n=5, r=2) at p3final.c:20
20    result=(fact(n))/(fact(r)*fact(n-r));
(gdb) n
21    return result;
(gdb) n
22  }
(gdb) p result
$3 = 10
(gdb) n
main () at p3final.c:31
31    output(n,r,result);
(gdb) s
output (n=5, r=2, result=10) at p3final.c:24
24    printf("value of ncr is %f",result);
(gdb) n
25  }
(gdb) n
main () at p3final.c:33
33  }(gdb) c
Continuing.
value of ncr is 10.000000[Inferior 1 (process 768) exited normally]
(gdb) 
